name: "Github actions nightly images"

on:
  push:
    branches:
      - "main"
    paths:
      - ".github/workflows/glpi-nightly.yml"
      - "glpi-production-env/**"
  pull_request:
    paths:
      - ".github/workflows/glpi-nightly.yml"
      - "glpi-production-env/**"
  schedule:
    - cron:  '0 0 * * 1'
  # Enable manual run
  workflow_dispatch:

jobs:
  build:
    name: "Build ${{ matrix.branch }} on PHP ${{ matrix.php-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        include:
          - {php-version: "8.2", branch: "main"}
          - {php-version: "8.1", branch: "10.0/bugfixes"}
    steps:
      - name: "Set variables"
        id: "variables"
        run: |
          DESTINATIONS="type=image"
          if [[ "${{ github.repository }}" = 'glpi-project/docker-images' && ( "${{ github.event_name }}" = "workflow_dispatch" || "${{ github.ref }}" = 'refs/heads/main' ) ]]; then
              DESTINATIONS="type=registry"
          fi
          echo "destinations=$DESTINATIONS" >> $GITHUB_OUTPUT
          IMAGE_VERSION=$(echo ${{ matrix.branch }} | sed -E 's|/|-|')
          echo "tags=glpi-nightly:$IMAGE_VERSION ghcr.io/glpi-project/glpi-nightly:$IMAGE_VERSION" >> $GITHUB_OUTPUT
      - name: "Checkout"
        uses: "actions/checkout@v4"
      - name: "Get sources from glpi-project/glpi"
        run: |
          curl https://github.com/glpi-project/glpi/archive/${{ matrix.branch }}.tar.gz --location --output glpi.tar.gz
          mkdir glpi-production-env/sources
          tar --extract --ungzip --strip 1 --file glpi.tar.gz --directory glpi-production-env/sources
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
      - name: "Login to DockerHub"
        uses: "docker/login-action@v3"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_TOKEN }}"
      - name: "Login to Github container registry"
        uses: "docker/login-action@v3"
        with:
          registry: "ghcr.io"
          username: "${{ secrets.GHCR_USERNAME }}"
          password: "${{ secrets.GHCR_ACCESS_TOKEN }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v6"
        with:
          build-args: |
            BUILDER_IMAGE=php:${{ matrix.php-version }}-cli-alpine
            APP_IMAGE=php:${{ matrix.php-version }}-apache
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          context: "glpi-production-env"
          outputs: "${{ steps.variables.outputs.destinations }}"
          pull: true
          tags: "${{ steps.variables.outputs.tags }}"
