name: "GLPI images for official releases"

on:
  # Enable manual run and trigger by another workflow (from glpi-project/glpi repository)
  workflow_dispatch:
    inputs:
      php-version:
        description: 'Input a PHP version (e.g., 8.4)'
        required: true
        default: '8.4'
      glpi-version:
        description: 'Input a version (e.g., 10.0.18)'
        required: true

jobs:
  build:
    name: "Build ${{ matrix.glpi-version }} on PHP ${{ matrix.php-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
    steps:
      - name: "Set variables"
        run: |
          OUTPUTS="type=image"
          if [[ "${{ github.ref }}" = 'refs/heads/main' && "${{ github.repository }}" = 'glpi-project/docker-images' ]]; then
              OUTPUTS="$OUTPUTS,push=true"
          fi
          echo "OUTPUTS=$OUTPUTS" >> $GITHUB_ENV
          IMAGE_VERSION=$(echo ${{ github.event.inputs.glpi-version }} | sed -E 's|/|-|')
          echo "IMAGE_TAG=ghcr.io/glpi-project/glpi:$IMAGE_VERSION" >> $GITHUB_ENV
      - name: "Checkout"
        uses: "actions/checkout@v4"
      - name: "Get sources from glpi-project/glpi"
        run: |
          curl https://github.com/glpi-project/glpi/archive/${{ github.event.inputs.glpi-version }}.tar.gz --location --output glpi.tar.gz
          mkdir glpi-production-env/sources
          tar --extract --ungzip --strip 1 --file glpi.tar.gz --directory glpi-production-env/sources
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
    #   - name: "Login to DockerHub"
    #     uses: "docker/login-action@v3"
    #     with:
    #       username: "${{ secrets.DOCKER_HUB_USERNAME }}"
    #       password: "${{ secrets.DOCKER_HUB_TOKEN }}"
    #   - name: "Login to Github container registry"
    #     uses: "docker/login-action@v3"
    #     with:
    #       registry: "ghcr.io"
    #       username: "${{ secrets.GHCR_USERNAME }}"
    #       password: "${{ secrets.GHCR_ACCESS_TOKEN }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v6"
        with:
          build-args: |
            BUILDER_IMAGE=php:${{ github.event.inputs.php-version }}-cli-alpine
            APP_IMAGE=php:${{ github.event.inputs.php-version }}-apache
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          context: "glpi-production-env"
          outputs: "${{ env.OUTPUTS }}"
          pull: true
          push: false
          tags: "${{ env.IMAGE_TAG }}"
