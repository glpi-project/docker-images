name: "GLPI images for official releases"

on:
  # Enable manual run
  #
  # or trigger by another external workflow, e.g:
  #
  # curl -X POST \
  # -H "Accept: application/vnd.github.v3+json" \
  # -H "Authorization: <access-token>" \
  # https://api.github.com/repos/glpi-project/docker-images/actions/workflows/<workflow-id>/dispatches \
  # -d '{"ref":"main", "inputs": { "php-version": "8.4", "glpi-version":"10.0.18" }}'
  workflow_dispatch:
    inputs:
      php-version:
        description: "PHP version to use for the build"
        required: true
        default: "8.4"
      glpi-version:
        description: "GLPI version to build, e.g. 10.0.18"
        required: true

jobs:
  build:
    name: "Build ${{ github.event.inputs.glpi-version }} on PHP ${{ github.event.inputs.php-version }}"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
    steps:
      - name: "Set variables"
        run: |
          # extract the asked versions from the inputs
          echo "PHP_VERSION=${{ github.event.inputs.php-version }}" >> $GITHUB_ENV
          echo "GLPI_VERSION=${{ github.event.inputs.glpi-version }}" >> $GITHUB_ENV

          # set the outputs for the build-push-action
          OUTPUTS="type=image"
          if [[ "${{ github.ref }}" = 'refs/heads/main' && "${{ github.repository }}" = 'glpi-project/docker-images' ]]; then
              OUTPUTS="$OUTPUTS,push=true"
          fi
          echo "OUTPUTS=$OUTPUTS" >> $GITHUB_ENV
          IMAGE_VERSION=$(echo ${{ env.PHP_VERSION }} | sed -E 's|/|-|')
          echo "IMAGE_TAG=ghcr.io/glpi-project/glpi:$IMAGE_VERSION" >> $GITHUB_ENV
      - name: "Checkout"
        uses: "actions/checkout@v4"
      - name: "Get sources from glpi-project/glpi"
        run: |
          curl https://github.com/glpi-project/glpi/archive/${{ env.GLPI_VERSION }}.tar.gz --location --output glpi.tar.gz
          mkdir glpi-production-env/sources
          tar --extract --ungzip --strip 1 --file glpi.tar.gz --directory glpi-production-env/sources
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
      - name: "Login to DockerHub"
        uses: "docker/login-action@v3"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_TOKEN }}"
      - name: "Login to Github container registry"
        uses: "docker/login-action@v3"
        with:
          registry: "ghcr.io"
          username: "${{ secrets.GHCR_USERNAME }}"
          password: "${{ secrets.GHCR_ACCESS_TOKEN }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v6"
        with:
          build-args: |
            BUILDER_IMAGE=php:${{ env.PHP_VERSION }}-cli-alpine
            APP_IMAGE=php:${{ env.PHP_VERSION }}-apache
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          context: "glpi-production-env"
          outputs: "${{ env.OUTPUTS }}"
          pull: true
          push: true
          tags: "${{ env.IMAGE_TAG }}"
