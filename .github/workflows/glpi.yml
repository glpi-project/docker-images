name: "GLPI images for official releases"

on:
  # Enable execution from another workflow
  workflow_call:
    inputs:
      glpi-version:
        required: true
        type: string
      image-suffix:
        required: false
        type: string
        default: ""
  # Enable manual run
  #
  # It can be executed by a curl command:
  #
  # curl -X POST \
  # -H "Accept: application/vnd.github.v3+json" \
  # -H "Authorization: <access-token>" \
  # https://api.github.com/repos/glpi-project/docker-images/actions/workflows/<workflow-id>/dispatches \
  # -d '{"ref":"main", "inputs": { "glpi-version":"10.0.18" }}'
  workflow_dispatch:
    inputs:
      glpi-version:
        description: "GLPI version to build, e.g. 10.0.18"
        required: true
        type: string
      image-suffix:
        description: "Suffix to add to the image name, e.g. 'nighlty'"
        required: false
        type: string
        default: ""

jobs:
  build:
    name: "Build GLPI ${{ inputs.glpi-version }}"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Set variables"
        id: "variables"
        run: |
          DESTINATIONS="type=image"
          if [[ "${{ github.repository }}" = 'glpi-project/docker-images' && ( "${{ github.event_name }}" = "workflow_dispatch" || "${{ github.ref }}" = 'refs/heads/main' ) ]]; then
              DESTINATIONS="type=registry"
          fi
          echo "destinations=$DESTINATIONS" >> $GITHUB_OUTPUT
          IMAGE_VERSION="$(echo '${{ inputs.glpi-version }}' | sed -E 's|/|-|')"
          if [[ "${{ inputs.image-suffix }}" != '' ]]; then
              IMAGE_VERSION="$IMAGE_VERSION-${{ inputs.image-suffix }}"
          fi
          echo "tags=glpi/glpi:$IMAGE_VERSION,ghcr.io/glpi-project/glpi:$IMAGE_VERSION" >> $GITHUB_OUTPUT
      - name: "Checkout"
        uses: "actions/checkout@v4"
      - name: "Get sources from glpi-project/glpi"
        run: |
          curl https://github.com/glpi-project/glpi/archive/${{ inputs.glpi-version }}.tar.gz --location --output glpi.tar.gz
          mkdir glpi/sources
          tar --extract --ungzip --strip 1 --file glpi.tar.gz --directory glpi/sources
      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"
      - name: "Login to DockerHub"
        uses: "docker/login-action@v3"
        with:
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_TOKEN }}"
      - name: "Login to Github container registry"
        uses: "docker/login-action@v3"
        with:
          registry: "ghcr.io"
          username: "${{ secrets.GHCR_USERNAME }}"
          password: "${{ secrets.GHCR_ACCESS_TOKEN }}"
      - name: "Build and push"
        uses: "docker/build-push-action@v6"
        with:
          build-args: |
            BUILDER_IMAGE=php:8.4-cli-alpine
            APP_IMAGE=php:8.4-apache
          cache-from: "type=gha"
          cache-to: "type=gha,mode=max"
          context: "glpi"
          outputs: "${{ steps.variables.outputs.destinations }}"
          pull: true
          tags: "${{ steps.variables.outputs.tags }}"
